import os.path
import datetime as dt
import subprocess

from enaml.core.api import Conditional
from enaml.widgets.api import Window, ObjectCombo, Label, Field, Container, Form, HGroup, PushButton, VGroup, GroupBox, CheckBox

from psi import get_config

from . import list_preferences


def update_base_folder(experiment, experimenter, animal, ear, note):
    data_root = get_config('DATA_ROOT')
    fmt = '{{date_time}} {experimenter} {animal} {ear} {note} {experiment}'
    formatted = fmt.format(experiment=experiment, experimenter=experimenter,
                           animal=animal, ear=ear, note=note)
    return os.path.join(data_root, formatted)


def launch(experiment, base_folder, settings, save):
    args = ['psi', experiment]
    if save:
        dt_string = dt.datetime.now().strftime('%Y%m%d-%H%M')
        base_folder = base_folder.format(date_time=dt_string)
        args.append(base_folder)
    if settings:
        args.extend(['--preferences', settings])
    subprocess.check_output(args)


enamldef LauncherView(Window): main:

    attr launcher

    Container:

        Form:
            Label:
                text = 'Experiment'

            ObjectCombo: experiment:
                items = ['calibration', 'abr']

            Label:
                text = 'Experiment Settings'

            ObjectCombo: settings:
                items << list_preferences(experiment.selected)
                to_string = lambda x: os.path.splitext(os.path.basename(x))[0]

            Label:
                text = 'Save data?'

            CheckBox: save:
                checked = True

        Form:
            enabled = save.checked

            Label:
                text = 'Experimenter'

            Field: experimenter:
                pass

            Label:
                text = 'Animal'

            HGroup:
                padding = 0
                Field: animal:
                    pass
                ObjectCombo: ear:
                    items = ['right', 'left']

            Label:
                text = 'Note'

            Field: note:
                pass

            Label:
                text = 'Base folder'

            Label: base_folder:
                text << update_base_folder(experiment.selected,
                                            experimenter.text,
                                            animal.text, ear.selected,
                                            note.text)

        PushButton:
            text = 'Run experiment'
            enabled << bool(
                not save.checked or \
                (experiment.selected and \
                 experimenter.text and \
                 animal.text and \
                 ear.selected and \
                 note.text)
            )

            clicked ::
                launch(experiment.selected, base_folder.text,
                       settings.selected, save.checked)
