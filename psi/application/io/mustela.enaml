import os.path

import numpy as np

from enaml.workbench.api import PluginManifest, Extension

from psi import get_config
from psi.controller.engines.null import NullEngine
from psi.controller.api import (AIChannel, AOChannel, ExperimentAction,
                                Trigger, Toggle, DOChannel, Input)

from psi.controller.input import (Downsample, IIRFilter, Threshold, Edges,
                                  CalibratedInput, RMS, SPL,
                                  Accumulate)

from psi.controller.calibration import GolayCalibration, FlatCalibration
from psi.controller.calibration.util import db

from psi.controller.devices.pellet_dispenser import PelletDispenser


cal_root = get_config('CAL_ROOT')
filename = os.path.join(cal_root, '161128 - Golay for training booth.cal')


enamldef IOManifest(PluginManifest): manifest:
    '''
    This defines the hardware connections that are specific to the LBHB Bobcat
    computer for the appetitive experiment.
    '''
    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NullEngine: engine:
            name = 'NI'
            master_clock = True

            AOChannel:
                label = 'Speaker'
                name = 'speaker_0'
                channel = 'Dev1/ao0'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')
                terminal_mode = 'RSE'
                calibration = \
                    GolayCalibration.from_file(filename, fixed_gain=-21.5)

            AIChannel:
                label = 'Continuous EEG'
                name = 'eeg_channel'
                channel = 'PXI1Slot7/ai0'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 25e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'AC'

            AIChannel: channel:
                label = 'Microphone'
                name = 'microphone'
                channel = 'Dev1/ai5'
                start_trigger = 'ao/StartTrigger'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')
                terminal_mode = 'differential'
                calibration = FlatCalibration(db(10))

                Accumulate:
                    n = 50
                    CalibratedInput:
                        IIRFilter:
                            f_highpass = 1000
                            f_lowpass = 40000
                            ftype = 'butter'
                            N = 4
                            btype = 'bandpass'
                            name = 'microphone'
                            RMS:
                                duration = 1
                                SPL:
                                    name = 'noise_level'
