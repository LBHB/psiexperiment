import os.path

from enaml.workbench.api import PluginManifest, Extension

from psi import get_config

from psi.controller.engines.nidaq import NIDAQEngine
from psi.controller.channel import AIChannel, AOChannel
from psi.controller.input import ContinuousInput, IIRFilter, Decimate
from psi.data.sinks.bcolz_store import BColzStore
from psi.controller.calibration import InterpCalibration


cal_root = get_config('CAL_ROOT')
mic_cal_filename = os.path.join(cal_root, '161219 - Golay calibration with 377C01 AO1 LBHB dome tweeter and coupler.mic')
mic_cal = InterpCalibration.from_mic_file(mic_cal_filename, fixed_gain=-40)


enamldef IOManifest(PluginManifest): manifest:

    Extension:
        id = 'data'
        point = 'psi.data.sinks'

        BColzStore:
            pass

    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NIDAQEngine:
            name = 'NI_EEG'
            hw_ai_monitor_period = 0.1

            AIChannel:
                label = 'EEG'
                name = 'eeg_channel'
                channel = 'PXI1Slot7/ai0'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 25e3
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'differential'
                terminal_coupling = 'AC'

        NIDAQEngine:
            name = 'NI_audio'
            master_clock = True

            hw_ai_monitor_period = 0.25
            hw_ao_monitor_period = 1

            AOChannel:
                label = 'primary'
                name = 'speaker_0'
                channel = 'PXI1Slot8/ao0'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'

            AOChannel:
                label = 'secondary'
                name = 'speaker_1'
                channel = 'PXI1Slot8/ao1'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'

            AIChannel:
                label = 'Probe tube microphone'
                name = 'microphone'
                channel = 'PXI1Slot8/ai0'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'differential'
                terminal_coupling = 'AC'
                calibration = mic_cal

                ContinuousInput:
                    name = 'microphone'
                    save = True

            AIChannel:
                label = 'Reference microphone'
                name = 'reference_microphone'
                channel = 'PXI1Slot8/ai1'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'differential'
                terminal_coupling = 'AC'

                ContinuousInput:
                    name = 'reference_microphone'
