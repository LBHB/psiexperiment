import os.path

import numpy as np

from enaml.workbench.api import PluginManifest, Extension

from psi import get_config
from psi.controller.engines.null import NullEngine
from psi.controller.api import (HardwareAIChannel, HardwareAOChannel,
                                ExperimentAction, Trigger, Toggle,
                                HardwareDOChannel, CalibratedInput, Input,
                                ExtractEpochs, RejectEpochs)

from psi.controller.calibration import GolayCalibration, FlatCalibration
from psi.controller.calibration.util import db

from psi.controller.devices.pellet_dispenser import PelletDispenser


cal_root = get_config('CAL_ROOT')
filename = os.path.join(cal_root, '161128 - Golay for training booth.cal')


enamldef IOManifest(PluginManifest): manifest:
    '''
    This defines the hardware connections that are specific to the LBHB Bobcat
    computer for the appetitive experiment.
    '''
    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NullEngine: engine:
            name = 'NI'
            master_clock = True

            HardwareAOChannel:
                label = 'Speaker'
                name = 'speaker_0'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')
                calibration = \
                    GolayCalibration.from_file(filename, fixed_gain=-21.5)

            HardwareAIChannel:
                label = 'Continuous EEG'
                name = 'eeg_channel'
                fs = 25e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')

                ExtractEpochs:
                    RejectEpochs:
                        name = 'valid_erp'

            HardwareAIChannel:
                label = 'Temperature'
                name = 'temperature_channel'
                fs = 25e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')

                Input:
                    name = 'temperature'

            HardwareAIChannel: channel:
                label = 'Microphone'
                name = 'microphone_channel'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = np.dtype('float64')
                calibration = FlatCalibration(db(10))

                CalibratedInput:
                    name = 'microphone'
