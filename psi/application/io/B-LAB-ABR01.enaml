import os.path

from enaml.workbench.api import PluginManifest, Extension

from psi import get_config

from psi.controller.engines.nidaq import (NIDAQEngine,
                                          NIDAQHardwareAIChannel,
                                          NIDAQHardwareAOChannel,
                                          NIDAQCounterChannel)
from psi.controller.input import (ContinuousInput, IIRFilter, Decimate,
                                  Transform)
from psi.controller.calibration import InterpCalibration, FlatCalibration


epl_cal_filename = 'c:/data/Probe Tube Calibrations/Right_ProbeTube.calib'
epl_mic_cal = InterpCalibration.from_epl(epl_cal_filename)


enamldef IOManifest(PluginManifest): manifest:

    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NIDAQEngine:
            name = 'NI_EEG'
            hw_ai_monitor_period = 0.125

            NIDAQCounterChannel:
                label = 'EEG clock'
                name = 'eeg clock'
                channel = 'PXI1Slot2/ctr0'
                source_terminal = '/PXI1Slot4/ao/SampleClock'
                high_samples = 2
                low_samples = 2

            NIDAQHardwareAIChannel:
                label = 'EEG'
                name = 'eeg_channel'
                channel = 'PXI1Slot2/ai0'
                fs << ao0.fs/4
                expected_range = (-0.1, 0.1)
                dtype = 'float64'
                terminal_mode = 'differential'
                unit = 'V'
                sample_clock = '/PXI1Slot2/Ctr0InternalOutput'

        NIDAQEngine:
            name = 'NI_audio'
            master_clock = True

            hw_ai_monitor_period = 0.125
            hw_ao_monitor_period = 0.125
            hw_ao_buffer_size = 1

            NIDAQHardwareAOChannel: ao0:
                label = 'primary'
                name = 'speaker_0'
                channel = 'PXI1Slot4/ao0'
                fs = 100000.00002037268
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                calibration = FlatCalibration.as_attenuation()

            NIDAQHardwareAOChannel:
                label = 'secondary'
                name = 'speaker_1'
                channel = 'PXI1Slot4/ao1'
                fs = 100000.00002037268
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                calibration = FlatCalibration.as_attenuation()

            NIDAQHardwareAIChannel:
                label = 'Probe tube microphone'
                name = 'microphone_channel'
                channel = 'PXI1Slot4/ai0'
                start_trigger = '/PXI1Slot4/ao/StartTrigger'
                fs = 100000.00002037268
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'AC'
                calibration = epl_mic_cal
                gain = 40

            NIDAQHardwareAIChannel:
                label = 'Reference microphone'
                name = 'reference_microphone_channel'
                channel = 'PXI1Slot4/ai1'
                start_trigger = '/PXI1Slot4/ao/StartTrigger'
                fs = 100000.00002037268
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'AC'
                calibration = FlatCalibration(1e-3)
                gain = 0
