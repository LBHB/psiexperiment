from enaml.widgets.api import Container, DockItem
from enaml.workbench.api import Extension, PluginManifest

from psi.controller.api import Downsample, ExperimentAction, IIRFilter
from psi.core.enaml.api import DataFrameTable
from psi.data.plots import TimeContainer, ViewBox, ChannelPlot
from psi.data.sinks.api import BColzStore, DisplayValue


enamldef EEGViewMixinManifest(PluginManifest): manifest:

    id = 'eeg_view_mixin'

    Extension:
        id = 'plots'
        point = 'psi.data.plots'

        TimeContainer:
            name = 'trial_plot_container'
            label = 'Trial timing'
            span = 2
            delay = 0.125

            ViewBox:
                name = 'ecg_view'
                y_min = -0.2
                y_max = 0.2

                ChannelPlot:
                    pen_color = 'k'
                    source_name = 'eeg_filtered'


enamldef TemperatureMixinManifest(PluginManifest): manifest:

    id = 'temperature_mixin'

    Extension:
        id = 'temperature_data'
        point = 'psi.data.sinks'

        BColzStore:
            name = 'temperature_store'
            continuous_inputs = ['temperature']

        DisplayValue:
            name = 'temperature_display'
            label = 'Temperature'
            source_name = 'temperature_decimated'

    Extension:
        id = 'temperature_io'
        point = 'psi.controller.io'

        IIRFilter:
            source_name = 'temperature'
            f_lowpass = 0.5
            btype = 'lowpass'
            ftype = 'butter'
            N = 1

            Downsample:
                name = 'temperature_decimated'
                q = 50


enamldef InEarCalibrationMixinManifest(PluginManifest): manifest:

    id = 'inear_calibration_mixin'

    Extension:
        id = 'actions'
        point = 'psi.controller.actions'

        ExperimentAction:
            weight = 10
            event = 'experiment_prepare'
            command = 'psi.controller.tone_calibrate_channel'
            kwargs = {
                'input_name': 'microphone',
                'output_name': 'target',
                'parameter_names': ['target_tone_frequency'],
                'gain': -40,
                'max_thd': None,
                'min_snr': 5,
                'duration': 0.1,
                'trim': 0.01,
                'iti': 0,
                'widget_name': 'calibration_result',
                'attr_name': 'result',
                'store_name': 'calibration_data',
            }

    Extension:
        id = 'calibration_view'
        point = 'psi.experiment.workspace'

        DockItem: di:
            name = 'calibration_result'
            title = 'Calibration result'
            attr result = None

            Container:
                DataFrameTable:
                    column_info = {
                        'frequency': {'label': 'Frequency (Hz)'},
                        'snr': {'label': 'SNR (dB)'},
                        'thd': {'label': 'THD (%)'},
                        'norm_spl': {'label': 'SPL @ 1 Vrms'},
                    }
                    columns = ['frequency', 'norm_spl', 'snr', 'thd']
                    data << result
