from enaml.widgets.api import Container, DockItem, Label
from enaml.workbench.api import Extension

from psi.controller.api import ExperimentAction
from psi.data.plots import GroupedResultPlot, PlotContainer, ViewBox

from .dpoae_base import ControllerManifest as DPOAEBaseControllerManifest

EXPERIMENT = __name__.rsplit('.', 1)[-1]


enamldef ControllerManifest(DPOAEBaseControllerManifest):

    Extension:
        id = EXPERIMENT + '.actions'
        point = 'psi.controller.actions'

        ExperimentAction:
            event = 'dpoae_acquired'
            command = 'psi.context.next_setting'
            kwargs = {'selector': 'default', 'save_prior': True}

        ExperimentAction:
            event = 'dpoae_acquired'
            command = 'dpoae.start'
            kwargs = {'delay': 1.0}

    Extension:
        id = EXPERIMENT + '.plots'
        point = 'psi.data.plots'

        PlotContainer:
            name = 'results_plot_container'
            label = 'Results'

            x_min = 0
            x_max = 100

            ViewBox:
                y_min = -20
                y_max = 100

                GroupedResultPlot: grp:
                    group_names = ['secondary_tone_frequency']
                    source_name = 'analyze_dpoae'
                    x_column = 'secondary_tone_level'
                    pen_width = 2
                    y_column = 'f2_level'
                    pen_color_cycle = 'palettable.cartocolors.sequential.BluGrn_6'

                GroupedResultPlot:
                    group_names << grp.group_names
                    source_name << grp.source_name
                    x_column << grp.x_column
                    pen_width << grp.pen_width
                    y_column = 'primary_tone_level'
                    pen_color_cycle = 'palettable.cartocolors.sequential.BrwnYl_6'

                GroupedResultPlot:
                    group_names << grp.group_names
                    source_name << grp.source_name
                    pen_width << grp.pen_width
                    x_column << grp.x_column
                    y_column = 'dpoae_noise_floor'
                    pen_color_cycle = 'palettable.cartocolors.sequential.Burg_6'

                GroupedResultPlot:
                    group_names << grp.group_names
                    source_name << grp.source_name
                    pen_width << grp.pen_width
                    x_column << grp.x_column
                    y_column = 'dpoae_level'
                    pen_color_cycle = 'palettable.cartocolors.sequential.DarkMint_6'

    Extension:
        id = EXPERIMENT + '.workspace'
        point = 'psi.experiment.workspace'

        DockItem: di:
            name = 'dpoae_status'
            title = 'Acquisition'

            attr n_fft = 0
            attr n_time = 0

            Container:
                Label:
                    text << '{} time, {} FFT'.format(n_time, n_fft)
