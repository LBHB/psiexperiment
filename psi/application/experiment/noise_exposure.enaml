import numpy as np

from enaml.workbench.api import Extension
from enaml.workbench.ui.api import Branding

from psi.context.api import Parameter
from psi.controller.base_manifest import BaseManifest
from psi.controller.api import EpochOutput, ExperimentAction, ExperimentState
from psi.controller.input import (Downsample, IIRFilter, Threshold, Edges,
                                  CalibratedInput, RMS, SPL)

from psi.data.plots import (TimeContainer, ChannelPlot, FFTContainer,
                            FFTChannelPlot, ViewBox)
from psi.data.sinks.bcolz_store import BColzStore
from psi.token.primitives import Cos2Envelope, BandlimitedNoise


enamldef ControllerManifest(BaseManifest): manifest:

    id = 'psi.controller'

    BColzStore:
        continuous_inputs = ['microphone']

    Extension:
        id = 'branding'
        point = 'enaml.workbench.ui.branding'
        Branding:
            title = 'Noise exposure'

    Extension:
        id = 'tokens'
        point = 'psi.token.tokens'

        Cos2Envelope:
            name = 'bandlimited_noise_burst'
            label = 'Bandlimited noise'
            BandlimitedNoise:
                pass

    Extension:
        id = 'io'
        point = 'psi.controller.io'

        EpochOutput:
            name = 'exposure'
            label = 'Exposure'
            target_name = 'speaker'

        IIRFilter:
            source_name = 'microphone'
            btype = 'highpass'
            ftype = 'butter'
            N = 2
            f_highpass = 100
            name = 'filtered_microphone'
            RMS:
                name = 'RMS'
                duration = 1
                SPL:
                    name = 'noise_level'

    Extension:
        id = 'actions'
        point = 'psi.controller.actions'
        rank = 100

        ExperimentAction:
            event = 'experiment_prepare'
            command = 'exposure.prepare'
        ExperimentAction:
            event = 'experiment_start'
            command = 'exposure.start'
            kwargs = {'start': 2}
        ExperimentAction:
            event = 'exposure_end'
            command = 'psi.controller.stop'

    Extension:
        id = 'plots'
        point = 'psi.data.plots'

        TimeContainer:
            name = 'microphone_container' 
            label = 'Microphone'
            delay = 1
            span = 10

            ViewBox:
                label = 'Microphone (Volts)'
                y_min = -10
                y_max = 10
                 
                ChannelPlot:
                    source_name = 'microphone'

        TimeContainer:
            name = 'noise_level_container'
            label = 'Noise level'
            delay = 0
            span = 600

            ViewBox:
                label = 'Noise level (dB SPL)'
                y_min = 90
                y_max = 120
                 
                ChannelPlot:
                    source_name = 'noise_level'

        FFTContainer:
            name = 'fft_plot_container'
            label = 'FFT'
            freq_lb = 0.1e3 
            freq_ub = 10e3

            ViewBox:
                label = 'PSD (dB SPL)'
                y_min = 0
                y_max = 100

                FFTChannelPlot:
                    source_name = 'filtered_microphone'
                    time_span = 2
                    #reference = 20e-6
