from enaml.workbench.api import Extension
from enaml.workbench.core.api import Command

from psi.context.api import BoolParameter, ContextGroup, Parameter
from psi.controller.api import ExperimentAction
from psi.controller.base_manifest import BaseManifest
from psi.controller.api import ContinuousInput, IIRFilter, Input
from psi.data.sinks.bcolz_store import BColzStore


def configure_experiment(event):
    context = event.workbench.get_plugin('psi.context')
    controller = event.workbench.get_plugin('psi.controller')

    if context.get_value('digital_filter'):
        f_highpass = context.get_value('digital_highpass')
        f_lowpass = context.get_value('digital_lowpass')
        controller.set_input_attr('eeg_filtered', 'f_highpass', f_highpass)
        controller.set_input_attr('eeg_filtered', 'f_lowpass', f_lowpass)
        controller.set_input_attr('eeg_filtered', 'passthrough', False)
    else:
        controller.set_input_attr('eeg_filtered', 'passthrough', True)


enamldef ControllerManifest(BaseManifest): manifest:

    Extension:
        id = 'eeg'
        point = 'psi.data.sinks'

        BColzStore:
            name = 'eeg'
            continuous_inputs = ['eeg']

    Extension:
        id = 'io'
        point = 'psi.controller.io'

        ContinuousInput:
            name = 'microphone'
            source_name = 'microphone_channel'

        Input:
            source_name = 'eeg_channel'
            name = 'eeg'

            IIRFilter:
                name = 'eeg_filtered'
                N = 2
                btype = 'bandpass'
                ftype = 'butter'
                source_name = 'eeg_channel'

    Extension:
        id = 'context'
        point = 'psi.context.items'

        ContextGroup:
            name = 'digital_filter'
            label = 'Digital filter settings'

            BoolParameter:
                name = 'digital_filter'
                label = 'Digital filter?'
                scope = 'experiment'
                default = True

            Parameter:
                name = 'digital_highpass'
                label = 'Digital highpass filter cutoff'
                default = 300
                scope = 'experiment'

            Parameter:
                name = 'digital_lowpass'
                label = 'Digital lowpass filter cutoff'
                default = 3000
                scope = 'experiment'

        ContextGroup:
            name = 'hardware_settings'
            label = 'Hardware settings'

            Parameter:
                name = 'amplifier_highpass'
                label = 'Amplifier highpass filter cutoff'
                default = 10
                scope = 'experiment'

            Parameter:
                name = 'amplifier_lowpass'
                label = 'Amplifier lowpass filter cutoff'
                default = 10e3
                scope = 'experiment'

            Parameter:
                name = 'amplifier_gain'
                label = 'Amplifier gain'
                default = 100e3
                scope = 'experiment'

    Extension:
        id = 'calibration_commands'
        point = 'enaml.workbench.core.commands'

        Command:
            id = 'psi.controller.configure_experiment'
            handler = configure_experiment

    Extension:
        id = 'actions'
        point = 'psi.controller.actions'
        rank = 100

        ExperimentAction:
            event = 'experiment_prepare'
            command = 'psi.controller.configure_experiment'
            weight = 11
