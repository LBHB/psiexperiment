import logging
log = logging.getLogger(__name__)

import numpy as np

from psi.context.api import Parameter

from .block import Block
from .primitives import (single_input, Cos2Envelope, cos2envelope_factory,
                         pregenerate_samples)


enamldef Token(Block):
    pass


class _EpochToken(Cos2Envelope):

    def get_duration(self, context):
        global_name = self.parameters[0].name
        return context[global_name]

    
enamldef EpochToken(_EpochToken):

    name = 'epoch'
    label = 'epoch'
    #factory = lambda **kwargs: pregenerate_samples(cos2envelope_factory, **kwargs)
    factory = cos2envelope_factory


@single_input
def default_continuous_factory(fs, calibration, input):
    waveform = None
    offset = 0
    while True:
        kwargs = (yield waveform)
        kwargs['offset'] = offset
        waveform = input.send(kwargs)
        offset += len(waveform)


enamldef ContinuousToken(Token):

    factory = default_continuous_factory
