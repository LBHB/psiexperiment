from atom.api import ContainerList, Typed, Dict
from enaml.application import deferred_call
from enaml.core.api import Looper
from enaml.layout.api import InsertItem
from enaml.widgets.api import (Container, Menu, Action, DockItem, PopupView,
                               Form, CheckBox, Label, HGroup)
from enaml.workbench.api import Extension, PluginManifest

import pandas as pd

from psi.core.enaml.api import DataframeTable
from psi.experiment.api import UIPreferences

PLUGIN_ID = 'psi.data.trial_log'


enamldef TableConfig(PopupView): popup:

    attr column_info
    attr widget

    parent_anchor = (0.0, 0.0)
    arrow_size = 20
    arrow_edge = 'right'
    offset = (0, 0)

    Form:
        Looper:
            iterable << sorted(column_info.items())
            CheckBox:
                checked << loop_item[0] in widget.columns
                toggled ::
                    if checked:
                        widget.columns.append(loop_item[0])
                    else:
                        widget.columns.remove(loop_item[0])
            Label:
                text = '{} | {}'.format(loop_item[1]['label'],
                                        loop_item[1]['compact_label'])


enamldef TrialLogDockItem(DockItem):

    attr data_plugin
    closable = False

    title_bar_right_clicked ::
        TableConfig(self, 
                    column_info=data_plugin.context_info,
                    widget=self.find('trial_log_table')).show()

    Container: main_container:
        DataframeTable: trial_log_table:
            name = 'trial_log_table'
            hug_width = 'weak'
            dataframe << data_plugin.trial_log
            column_info << data_plugin.context_info

            cell_color => (row, column):
                # TODO: A bit of a hack here ...
                if 'trial_type' in dataframe:
                    tt = dataframe.at[row, 'trial_type']
                    if tt == 'go_remind':
                        return 'forestgreen'
                    elif tt == 'go':
                        return 'lightgreen'
                    elif tt == 'go_forced':
                        return 'green'
                    elif tt == 'nogo':
                        return 'lightpink'
                    elif tt == 'nogo_repeat':
                        return 'pink'
                return 'white'


def contribute_to_workspace(workbench, workspace):
    plugin = workbench.get_plugin('psi.data')
    item = TrialLogDockItem(workspace.dock_area, 
                            data_plugin=plugin,
                            name='trial_log', 
                            title='Trial Log')
    op = InsertItem(item=item.name, position='right')
    deferred_call(workspace.dock_area.update_layout, op)


enamldef TrialLogManifest(PluginManifest): manifest:

    id = PLUGIN_ID

    Extension:
        id = 'workspace'
        point = 'psi.experiment.workspace'
        factory = contribute_to_workspace

    Extension:
        id = 'preferences'
        point = 'psi.experiment.preferences'
        UIPreferences:
            name = 'trial_log_table_columns'
            item_name = 'trial_log_table'
            auto_save = ['columns', 'column_state']
