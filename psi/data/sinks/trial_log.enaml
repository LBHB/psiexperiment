from enaml.core.api import Conditional, d_func
from enaml.widgets.api import CheckBox, Container, DockItem, VGroup
from enaml.workbench.api import Extension

from psi.context.api import OrderedContextMeta
from psi.core.enaml.api import ListDictTable
from psi.experiment.api import ItemPreferences

from .table_store import TableStore, TableStoreManifest


class TrialLog(TableStore):

    name = 'trial_log'
    label = 'Trial log'

    @d_func
    def get_cell_color(self, row, column):
        return 'white'


enamldef TrialLogManifest(TableStoreManifest): manifest:

    Conditional:
        condition << manifest.contribution.show_widget

        Extension:
            id = manifest.id + '.trial_log.items'
            point = 'psi.context.items'
            OrderedContextMeta: meta:
                editable = True
                link_rove = False
                name << contribution.name
                label << '{} columns'.format(contribution.label)
                values ::
                    tl_table.columns = [v.name for v in values]
                    column_info = {}
                    for v in values:
                        column_info[v.name] = {
                            'label': v.compact_label,
                            'to_string': '{:.2f}'.format if 'f' in v.dtype else str,
                        }
                    tl_table.column_info = column_info

        Extension:
            id = manifest.id + '.trial_log_workspace'
            point = 'psi.experiment.workspace'

            DockItem: di:
                closable = False
                name << manifest.contribution.name
                title << manifest.contribution.label

                Container:
                    VGroup:
                        CheckBox:
                            text = 'Autoscroll?'
                            checked := tl_table.autoscroll

                    ListDictTable: tl_table:
                        name = 'tl_table'
                        data << manifest.contribution._data[:]
                        get_cell_color => (row, column):
                            try:
                                tt = data[row]['trial_type']
                                if tt == 'go_remind':
                                    return 'forestgreen'
                                elif tt == 'go':
                                    return 'lightgreen'
                                elif tt == 'go_forced':
                                    return 'green'
                                elif tt == 'nogo':
                                    return 'lightpink'
                                elif tt == 'nogo_repeat':
                                    return 'pink'
                            except KeyError:
                                return 'white'
                        autoscroll = True
                        columns_movable = False

        Extension:
            id = manifest.id + '.preferences'
            point = 'psi.experiment.preferences'
            rank = 200
            ItemPreferences:
                item << tl_table
                name << manifest.contribution.name
                auto_save = ['column_config']
