from atom.api import Typed
from enaml.core.api import d_
from enaml.widgets.api import Container, DockItem
from enaml.workbench.api import Extension

from psi.context.context_item import OrderedContextMeta
from psi.core.enaml.api import PSIManifest
from psi.core.enaml.editable_table_widget import DataFrameTable
from psi.experiment.api import ItemPreferences

from ..sink import Sink


class TrialLog(Sink):
    
    name = 'trial_log'
    label = 'Trial log'


enamldef TrialLogManifest(PSIManifest): manifest:

    Extension:
        id = 'workspace'
        point = 'psi.experiment.workspace'
        DockItem: di:
            name << manifest.contribution.name
            title << manifest.contribution.label
            closable = False

            attr data_plugin = workbench.get_plugin('psi.data')

            Container: 
                DataFrameTable: table:
                    name = 'trial_log_table'
                    data << data_plugin.trial_log
                    get_cell_color => (row, column):
                        if 'trial_type' in data:
                            tt = data.at[row, 'trial_type']
                            if tt == 'go_remind':
                                return 'forestgreen'
                            elif tt == 'go':
                                return 'lightgreen'
                            elif tt == 'go_forced':
                                return 'green'
                            elif tt == 'nogo':
                                return 'lightpink'
                            elif tt == 'nogo_repeat':
                                return 'pink'
                        return 'white'

    Extension:
        id = 'items'
        point = 'psi.context.items'
        OrderedContextMeta: meta:
            name << manifest.contribution.name
            label << '{} columns'.format(manifest.contribution.label)
            values::
                table.columns = [v.name for v in values]
                table.column_info = {v.name: v for v in values}
