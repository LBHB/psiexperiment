import logging
log = logging.getLogger(__name__)


from atom.api import Typed, Event
from ..sink import Sink


class EpochAverage(Sink):

    cumulative_average = Typed(dict, {})
    cumulative_n = Typed(dict, {})
    updated = Event()

    def process_ai_epochs(self, name, data):
        for d in data:
            self._process_epoch(d['key'], d['epoch'])
        self.updated = True

    def _process_epoch(self, key, epoch):
        n = self.cumulative_n.setdefault(key, 1)
        if n == 1:
            average = epoch[:]
        else:
            average = self.cumulative_average[key]
            average = average * (n-1)/n + epoch * (1/n)
        self.cumulative_average[key] = average
        self.cumulative_n[key] += 1
