from atom.api import Unicode, Typed
from enaml.workbench.api import Extension, PluginManifest

import tables as tb
import pandas as pd
import numpy as np

from ..plugin import TrialData

PLUGIN_ID = 'psiexperiment.data.hdf_store'


class HDFStore(TrialData):
    '''
    Simple class for storing acquired trial data in a HDF5 file. No analysis or
    further processing is done.
    '''
    file_name = Unicode()
    table = Typed(tb.Table)
    description = Typed(np.dtype)

    def prepare(self, parameters):
        fh = tb.open_file(self.file_name, 'w')
        description = [(str(p.name), p.dtype) for p in parameters]
        self.description = np.dtype(description)
        self.table = fh.create_table('/', 'trial_log', self.description)

    def process_trial(self, trial):
        # This is the simplest one-liner to convert the dictionary to the
        # format required for appending.
        row = pd.DataFrame([trial]).to_records().astype(self.description)
        self.table.append(row)
        self.table.flush()


enamldef HDFStoreManifest(PluginManifest): manifest:

    id = PLUGIN_ID

    Extension:
        id = 'data'
        point = 'psiexperiment.data.trial'
        HDFStore:
            pass
