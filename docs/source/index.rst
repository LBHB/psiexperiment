=========================================
 Welcome to Psiexperiment
=========================================

Psiexperiment is a framework for creating feature-rich data acquistion experiments with minimal effort. Psiexperiment can be run on any platform which supports Python and Qt.

A few highlights:

* Plugin-oriented approach which facilitates adaptation of existing experiment designs and porting expeirments to new hardware systems.
* Declarative language which makes experiment configuration explicit.  

The plugin-oriented nature of psiexperiment has a bit of a learning curve, but allows for design of very flexible experiments that facilitates adding new features. During an experiment lifecycle, psiexperiment handles the following:

* **Configure the hardware** - This includes defining which channels are connected to which inputs/outputs.
* **Hardware abstraction layer** - The software should not care whether your speaker is connected to `DEV32143/ao3` or `DEV1/ao1`. Further, it should not care whether you're using a National Instruments or TDT system. The software just wants a channel named `speaker` that it can upload sound waveforms to. The hardware abstraction layer will handle this internally. In psiexperiment, the abstraction layer is provided by `psi.controller.engine` and managed by `psi.controller.plugin`.
* **Define a sequence of parameters to iterate through** - If you're performing a psychophysical task, you'll want to define a sequence of value sto test. For example, if you're doing tone-in-noise detection, you may want to vary the signal-to-noise ratio.
* **Generate and upload a stimulus waveform** - We do auditory experiments. Such experiments require playing a sound which is generated by passing the waveform through a speaker.
* **Perform actions based on what happens during the experiment** - If the animal licks the spout, what should the program do?

.. toctree::
   :maxdepth: 2
   :caption: Contents:

:doc:`installing`
-----------------
Instructions on installing psiexperiment and configuring your system.

:doc:`io_manifest`
------------------
Instructions on creating your input-output manifest which describes all equipment used for the experiment.

:doc:`context`
--------------
Define parameters and sequences.

:doc:`waveforms`
----------------
Create stimuli.

:doc:`creating_experiment`
--------------------------
Instructions on how to create your own experiment.

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
